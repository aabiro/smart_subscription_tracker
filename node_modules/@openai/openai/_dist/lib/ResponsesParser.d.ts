import type { ChatCompletionTool } from "../resources/chat/completions.js";
import { type FunctionTool, type ResponseCreateParamsBase, type Tool } from "../resources/responses/responses.js";
import { type AutoParseableTextFormat } from "./parser.js";
export type ParseableToolsParams = Array<Tool> | ChatCompletionTool | null;
export type ResponseCreateParamsWithTools = ResponseCreateParamsBase & {
  tools?: ParseableToolsParams;
};
export type ExtractParsedContentFromParams<Params extends ResponseCreateParamsWithTools> = NonNullable<Params['text']>['format'] extends AutoParseableTextFormat<infer P> ? P : null;
type ToolOptions = {
  name: string;
  arguments: any;
  function?: ((args: any) => any) | undefined;
};
export type AutoParseableResponseTool<OptionsT extends ToolOptions, HasFunction = OptionsT['function'] extends Function ? true : false> = FunctionTool & {
  __arguments: OptionsT['arguments'];
  __name: OptionsT['name'];
  $brand: 'auto-parseable-tool';
  $callback: ((args: OptionsT['arguments']) => any) | undefined;
  $parseRaw(args: string): OptionsT['arguments'];
};
//# sourceMappingURL=ResponsesParser.d.ts.map